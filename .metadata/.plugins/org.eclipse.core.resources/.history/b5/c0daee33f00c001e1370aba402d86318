package entities;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;

import entities.enums.OrderStatus;

public class Order {
	
	private static final DateTimeFormatter fmt2 = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss");
	
	private LocalDateTime moment;
	private OrderStatus status;
	
	private Client client;
	private List<OrderItem> orderItems = new ArrayList<>();
	
	public Order(LocalDateTime moment, OrderStatus status, Client client, List<OrderItem> orderItems) {
		
		this.moment = moment;
		this.status = status;
		this.client = client;
		this.orderItems = orderItems;
	}

	public LocalDateTime getMoment() {
		return moment;
	}

	public void setMoment(LocalDateTime moment) {
		this.moment = moment;
	}

	public OrderStatus getStatus() {
		return status;
	}

	public void setStatus(OrderStatus status) {
		this.status = status;
	}

	public Client getClient() {
		return client;
	}

	public void setClient(Client client) {
		this.client = client;
	}

	public List<OrderItem> getOrderItems() {
		return orderItems;
	}
	
	public void addItem(OrderItem item) {
		orderItems.add(item);
	}
	
	public void RemoveItem(OrderItem item) {
		orderItems.remove(item);
	}
	public Double totalPrice() {
		double sum = 0.0;
		for(OrderItem i: orderItems) {
			sum += i.subTotal();
		}
		return sum;
	}
	@Override
	public String toString() {
		
		StringBuilder sb = new StringBuilder();
		
		sb.append("ORDER SUMMARY: \n");
		sb.append("Order moment: " + moment + "\n");
		sb.append("Order status: " + status + "\n");
		sb.append("Client: " + client + "("+ moment.format(fmt2) + ") - " + client.getEmail() +"\n");
		sb.append("Order items: \n");
		for(OrderItem i: orderItems) {
			sb.append(i + "\n");
		}
		sb.append("Total price: $" + String.format("%.2f", totalPrice()));
		
		return sb.toString();
	}
	
}
